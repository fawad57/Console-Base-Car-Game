/*
Fawad Humayun (22i-2548)
Areeba Nisar(22i-8770)
SE-E
*/


#pragma once
#include <iostream>
#include<Windows.h>
#include"Gird_list.h"
#include"Queue_Node.h"
using namespace std;
class Level_Three {
	Grid_Node** arr;
public:
	Level_Three() {
		arr = new Grid_Node * [50];
		for (int i = 0; i < 50; i++)
		{
			arr[i] = new Grid_Node[50];
			for (int j = 0; j < 50; j++)
			{
				arr[i][j] = Grid_Node();
			}
		}
	}

	Grid_Node** level_Three_Grid() {

		//creating a maza in a 2D character array.

		char ch[50][50] = { {'_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
							{'|','S','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','.','.','|'},
							{'|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','.','.','|'},
							{'|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','.','.','|'},
							{'|','-','-','-','.','.','-','-','-','-','-','-','-','-','-','-','.','.','|','.','.','-','-','-','-','-','-','-','.','.','|','-','-','.','.','-','-','-','-','-','-','-','-','.','.','|','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','.','.','.','.','.','.','|','.','.','|','.','.','.','.','.','.','.','.','|','.','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','.','.','.','.','.','.','|','.','.','|','.','.','.','.','.','.','.','.','|','.','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','.','|','.','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','-','-','-','-','-','-','.','.','|','.','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','.','|','.','.','-','-','-','-','-','-','-','-','-','-','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','-','-','-','-','-','-','-','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','.','.','.','|','.','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','.','|','.','.','|','.','.','-','-','-','-','-','-','-','.','.','|','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','.','.','.','|','.','.','|','.','.','.','.','.','.','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','|'},
							{'|','.','.','.','.','.','|','.','.','|','.','.','|','-','-','-','-','-','-','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','|'},
							{'|','.','.','-','-','-','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','|'},
							{'|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','.','.','.','.','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','-','-','-','-','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','.','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','.','.','.','|','.','.','|','.','.','.','|','.','.','|'},
			                {'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','-','-','-','-','-','-','-','-','-','-','-','-','-','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','-','-','-','-','-','-','-','-','-','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','|','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','|','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','-','-','-','-','-','|','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','|','.','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','.','.','.','|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','|','.','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','-','-','-','-','-','|','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','|','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','.','|','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','-','-','-','-','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','.','.','.','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','.','.','.','.','.','|','.','.','|','.','.','|','.','.','.','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','.','.','.','|','.','.','.','.','.','|','.','.','|','.','.','.','|','.','.','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','|','.','.','|'},
							{'|','.','.','|','.','.','.','.','.','|','.','.','.','.','.','|','.','.','.','.','.','.','|','.','.','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','|'},
			                {'|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','.','|','.','.','.','.','.','.','.','|','.','.','|','.','.','|','.','.','|','.','.','|','.','.','.','.','.','E','|'},
					        {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'} };

		//for (int i = 0; i < 50; i++)
		//{
		//	for (int j = 0; j < 50; j++) {
		//		cout << ch[i][j] << " ";
		//	}
		//	cout << endl;
		//}


		//this loop store the char array in the adjacent node.

		for (int i = 0; i < 50; i++)
		{
			for (int j = 0; j < 50; j++) {
				arr[i][j].ch = ch[i][j];
			}
		}

		int counter = 0;
		int x_axis, y_axis;


		srand(time(0));

		//this loop randomly generate the coins in a gird.

		while (counter != 111)
		{
			//cout << "1" << endl;
			x_axis = rand() % 50;
			y_axis = rand() % 50;
			if (arr[x_axis][y_axis].ch == '.') {
				arr[x_axis][y_axis].ch = '$';
				counter++;
			}
		}



		QueueNode queue;

		//this loop randomly generate the obstacles and store those obstacles in queue.

		counter = 0;
		while (counter != 81)
		{
			x_axis = rand() % 50;
			y_axis = rand() % 50;
			if (arr[x_axis][y_axis].ch == '.') {
				queue.enqueue(x_axis, y_axis);
				counter++;
			}
		}


		//this loop randomly generate the Trophies in a gird which will boost the scores in the end.
	
		counter = 0;
		while (counter != 11)
		{
			x_axis = rand() % 50;
			y_axis = rand() % 50;
			if (arr[x_axis][y_axis].ch == '.') {
				arr[x_axis][y_axis].ch = 'T';
				counter++;
			}
		}


		//this loop randomly generate the Mystery boxes in a gird which will boost the coins in the end.


		counter = 0;
		while (counter != 11)
		{
			x_axis = rand() % 50;
			y_axis = rand() % 50;
			if (arr[x_axis][y_axis].ch == '.') {
				arr[x_axis][y_axis].ch = 'B';
				counter++;
			}
		}


		//this loop randomly generate the + in a gird which boost the score by 1.

		counter = 0;
		while (counter != 106)
		{
			x_axis = rand() % 50;
			y_axis = rand() % 50;
			if (arr[x_axis][y_axis].ch == '.') {
				arr[x_axis][y_axis].ch = '+';
				counter++;
			}
		}

		//this loop dequeue obstacles from the list and placed them in a gird. 

		Queue* q;
		do
		{
			q = queue.dequeue();
			if (q != NULL) {
				arr[q->x_axis][q->y_axis].ch = q->ch;
			}
		} while (q != NULL);


		//this loop randomly generate the fuel tanker in a gird which help the player to refill their fuel tank. 

		counter = 0;
		while (counter != 23)
		{
			x_axis = rand() % 50;
			y_axis = rand() % 50;
			if (arr[x_axis][y_axis].ch == '.') {
				arr[x_axis][y_axis].ch = 'f';
				counter++;
			}
		}

		//this loop randomly generate the keys in a gird which gives a live to the player.

		counter = 0;
		while (counter != 7)
		{
			x_axis = rand() % 50;
			y_axis = rand() % 50;
			if (arr[x_axis][y_axis].ch == '.') {
				arr[x_axis][y_axis].ch = 'K';
				counter++;
			}
		}


		//here we connected the up down left right nodes with each other.


		for (int i = 0; i < 50; i++)
		{
			for (int j = 0; j < 49; j++) {
				arr[i][j].right = &arr[i][j + 1];
				arr[i][j + 1].left = &arr[i][j];
			}
			if (i > 0) {
				for (int j = 0; j < 50; j++)
				{
					arr[i][j].up = &arr[i - 1][j];
					arr[i - 1][j].down = &arr[i][j];
				}
			}
		}

	/*			for (int i = 0; i < 50; i++)
		{
			for (int j = 0; j < 50; j++) {
				cout << arr[i][j].ch << " ";
			}
			cout << endl;
		}*/
				return arr;

	}
};